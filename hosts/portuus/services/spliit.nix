# FIXME: Error: crun: openat2 `var/lib/postgresql/data`: No such file or directory: OCI runtime attempted to invoke a command that was not found

{
  config,
  lib,
  pkgs,
  ...
}:

let
  volume = "/opt/spliit";
  pgDataDir = "${volume}/postgres-data";
  port = "3333";
  subdomain = "split";
in
{
  systemd.tmpfiles.rules = [
    "d ${volume} 0755 root root -"
    "d ${pgDataDir} 0700 postgres postgres -"
  ];

  services.nginx.virtualHosts."${subdomain}.${config.networking.domain}" = {
    enableACME = true;
    forceSSL = true;
    locations."/" = {
      proxyPass = "http://localhost:${port}";
      proxyWebsockets = true;
    };
  };

  # Auto-generated using compose2nix v0.3.1:

  # Runtime
  virtualisation.podman = {
    enable = true;
    autoPrune.enable = true;
    dockerCompat = true;
    defaultNetwork.settings = {
      # Required for container networking to be able to use names.
      dns_enabled = true;
    };
  };

  # Enable container name DNS for non-default Podman networks.
  # https://github.com/NixOS/nixpkgs/issues/226365
  networking.firewall.interfaces."podman+".allowedUDPPorts = [ 53 ];

  virtualisation.oci-containers.backend = "podman";

  # Containers
  virtualisation.oci-containers.containers."spliit-app" = {
    # image = "localhost/spliit:latest"; # TODO
    image = "crazymax/spliit:latest";
    environment = {
      "POSTGRES_DB" = "spliit";
      "POSTGRES_PASSWORD" = "spliit";
      "POSTGRES_PRISMA_URL" = "postgresql://spliit:spliit@db:5432/spliit";
      "POSTGRES_URL_NON_POOLING" = "postgresql://spliit:spliit@db:5432/spliit";
      "POSTGRES_USER" = "spliit";
    };
    ports = [
      "${port}:3000/tcp"
    ];
    dependsOn = [
      "spliit-db"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=app"
      "--network=spliit_spliit_network"
    ];
  };
  systemd.services."podman-spliit-app" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "no";
    };
    after = [
      "podman-network-spliit_spliit_network.service"
    ];
    requires = [
      "podman-network-spliit_spliit_network.service"
    ];
    partOf = [
      "podman-compose-spliit-root.target"
    ];
    wantedBy = [
      "podman-compose-spliit-root.target"
    ];
  };
  virtualisation.oci-containers.containers."spliit-db" = {
    image = "postgres:latest";
    environment = {
      "POSTGRES_DB" = "spliit";
      "POSTGRES_PASSWORD" = "spliit";
      "POSTGRES_PRISMA_URL" = "postgresql://spliit:spliit@db:5432/spliit";
      "POSTGRES_URL_NON_POOLING" = "postgresql://spliit:spliit@db:5432/spliit";
      "POSTGRES_USER" = "spliit";
    };
    volumes = [
      "${pgDataDir}:/var/lib/postgresql/data:rw"
    ];
    log-driver = "journald";
    extraOptions = [
      "--health-cmd=pg_isready -U postgres"
      "--health-interval=5s"
      "--health-retries=5"
      "--health-timeout=5s"
      "--network-alias=db"
      "--network=spliit_spliit_network"
    ];
  };
  systemd.services."podman-spliit-db" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "no";
    };
    after = [
      "podman-network-spliit_spliit_network.service"
    ];
    requires = [
      "podman-network-spliit_spliit_network.service"
    ];
    partOf = [
      "podman-compose-spliit-root.target"
    ];
    wantedBy = [
      "podman-compose-spliit-root.target"
    ];
  };

  # Networks
  systemd.services."podman-network-spliit_spliit_network" = {
    path = [ pkgs.podman ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "podman network rm -f spliit_spliit_network";
    };
    script = ''
      podman network inspect spliit_spliit_network || podman network create spliit_spliit_network --driver=bridge
    '';
    partOf = [ "podman-compose-spliit-root.target" ];
    wantedBy = [ "podman-compose-spliit-root.target" ];
  };

  # Builds
  systemd.services."podman-build-spliit-app" = {
    path = [
      pkgs.podman
      pkgs.git
    ];
    serviceConfig = {
      Type = "oneshot";
      TimeoutSec = 300;
    };
    script = ''
      cd /home/sid/dls/spliit
      podman build -t spliit:latest .
    '';
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-spliit-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
